application.name=Eletric-Err
spring.mvc.dispatch-options-request=true
server.port=8085
#server.port=443
http.port=8084
#http.port=80
##实验室机房的服务器
application.GTDB_addr=10.109.246.63:3306
application.MTDB_addr=10.109.246.63:3306
application.ETDB_addr=10.109.246.63:3306
spring.datasource.MTDP.username=root
spring.datasource.MTDP.password=hadoop
spring.datasource.eletric_grid.username=root
spring.datasource.eletric_grid.password=hadoop
spring.datasource.eletric_grid.url=jdbc:mysql://10.109.246.63:3306/electricGrid2019?useUnicode=true&characterEncoding=utf8&autoReconnect=true
spring.datasource.eletric_grid.driverClassName=com.mysql.jdbc.Driver
spring.datasource.eletric_grid.auto-commit=false


#thymelea模板配置
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
#热部署文件，页面不产生缓存，及时更新
spring.thymeleaf.cache=false
spring.resources.chain.strategy.content.enabled=true
spring.resources.chain.strategy.content.paths=/**

#spring.resources.static-locations=["/resources/","/templates/","/static/"]

#mybatis.config-locations=classpath:mybatis/mybatis-config.xml
#spring.datasource.green_travel.url=jdbc:mysql://${application.GTDB_addr}/green_travel?useUnicode=true&characterEncoding=utf8&autoReconnect=true
#spring.datasource.green_travel.driverClassName=com.mysql.jdbc.Driver
#spring.datasource.green_travel.auto-commit=false
#spring.datasource.MTDP.url=jdbc:mysql://${application.MTDB_addr}/mt_dp?useUnicode=true&characterEncoding=utf8&autoReconnect=true
#spring.datasource.MTDP.driverClassName=com.mysql.jdbc.Driver

# 数据库链接自动断开的问题
#初始化连接
spring.datasource.green_travel.initial-size=10
#最大空闲连接
spring.datasource.green_travel.max-idle=20
#最小空闲连接
spring.datasource.green_travel.min-idle=5
#最大连接数量
spring.datasource.green_travel.max-active=50
#是否在自动回收超时连接的时候打印连接的超时错误
spring.datasource.green_travel.log-abandoned=true
#是否自动回收超时连接
spring.datasource.green_travel.remove-abandoned=true
#超时时间(以秒数为单位)
spring.datasource.green_travel.remove-abandoned-timeout=180
##<!-- 超时等待时间以毫秒为单位 6000毫秒/1000等于60秒 -->
spring.datasource.green_travel.max-wait=1000
spring.datasource.green_travel.test-while-idle=true
#检测数据库的查询语句
spring.datasource.green_travel.validation-query=select 1
spring.datasource.green_travel.test-on-borrow=true
#每隔五分钟检测空闲超过10分钟的连接
spring.datasource.green_travel.min-evictable-idle-time-millis=600000
spring.datasource.green_travel.time-between-eviction-runs-millis=300000

# 数据库链接自动断开的问题
#初始化连接
spring.datasource.MTDP.initial-size=10
#最大空闲连接
spring.datasource.MTDP.max-idle=20
#最小空闲连接
spring.datasource.MTDP.min-idle=5
#最大连接数量
spring.datasource.MTDP.max-active=50
#是否在自动回收超时连接的时候打印连接的超时错误
spring.datasource.MTDP.log-abandoned=true
#是否自动回收超时连接
spring.datasource.MTDP.remove-abandoned=true
#超时时间(以秒数为单位)
spring.datasource.MTDP.remove-abandoned-timeout=180
##<!-- 超时等待时间以毫秒为单位 6000毫秒/1000等于60秒 -->
spring.datasource.MTDP.max-wait=1000
spring.datasource.MTDP.test-while-idle=true
#检测数据库的查询语句
spring.datasource.MTDP.validation-query=select 1
spring.datasource.MTDP.test-on-borrow=true
#每隔五分钟检测空闲超过10分钟的连接
spring.datasource.MTDP.min-evictable-idle-time-millis=600000
spring.datasource.MTDP.time-between-eviction-runs-millis=300000

logging.file=logs/GTravelApplication.log
logging.file.max-size=1MB
logging.file.max-history=10
